{"version":3,"sources":["logo.png","components/App.js","serviceWorker.js","index.js"],"names":["module","exports","__webpack_require__","p","App","props","_this","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","connect_metamask","asyncToGenerator","regenerator_default","a","mark","_callee","chainId","wrap","_context","prev","next","setState","ethereum","window","enable","provider","ethers","providers","Web3Provider","connected","t0","state","getSigner","getAddress","t1","sent","t2","account","getNetwork","alert","console","log","loadRaffles","stop","save_raffle_id","_ref2","_callee2","raffle_id","raffles","_context2","localStorage","getItem","JSON","parse","push","setItem","stringify","_x","apply","arguments","check_if_bought","_ref3","_callee3","_context3","includes","abrupt","_x2","disconnect_metamask","_callee4","_context4","create_raffle","_ref5","_callee5","ticket_price","raffle_end_balance","contract","tx","_context5","Contract","abi","createRaffle","wait","_x3","_x4","end_raffle","_ref6","_callee6","_context6","endRaffle","_x5","buy_ticket","_ref7","_callee7","price","price_wei","_context7","utils","parseEther","substring","parseUnits","from","to","value","toString","data","Interface","functions","buyTicket","encode","send","_x6","_x7","withdraw","_callee8","_context8","get_raffles","_callee9","response","result","_context9","jsonrpc","method","params","id","fetch","body","headers","Content-Type","json","defaultAbiCoder","decode","getRaffleInfo","_ref10","_callee10","_context10","padStart","_x8","_callee11","_context11","fake_raffle","_callee12","raffle","pushed","_context12","raffles1","show_navbar","react_default","createElement","className","style","marginRight","color","Button","variant","fontSize","onClick","show_raffle","Card","width","Body","Title","Text","formatUnits","ProgressBar_default","margin","now","label","show_owner","owner","admin","type","placeholder","onChange","e","target","show_raffles","display","flexWrap","map","show_fotter","show_before_connect","src","alt","height","textAlign","api","inputs","stateMutability","anonymous","indexed","internalType","name","outputs","components","href","rel","role","Component","Boolean","location","hostname","match","ReactDOM","render","src_components_App","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.a20af6c4.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/logo.06825633.png\";","import React, { Component } from 'react';\nimport logo from '../logo.png';\nimport './App.css';\nimport { ethers } from \"ethers\";\nimport ProgressBar from 'react-bootstrap/ProgressBar';\n// import web3\nimport Web3 from 'web3';\nimport { Button, Form, FormGroup, Label, Input, FormText, Card } from 'react-bootstrap';\nimport abiDecoder from 'abi-decoder';\nclass App extends Component {\n  // connect metamask to the dapp, and create state with window.ethereum\n  // init state\n  \n  constructor(props) {\n    super(props);\n    this.state = {\n      ethereum: null,\n      provider: null,\n      connected: false,\n      account: null,\n      admin: false,\n      contract: \"0xA37AE627b2667B82330E91B2251c5b7113Fe1634\",\n      owner: \"0xB0061ACb424DB252D52a9E97B90824300855885E\",\n      raffles: null,\n      raffles1: null,\n      api: \"https://blue-ultra-uranium.bsc.discover.quiknode.pro/mktp-2c22977394e703a3fe4d96df6753fe6505373452/\",\n      abi: [{\"inputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"_from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"_id\",\"type\":\"bytes32\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"_value\",\"type\":\"uint256\"}],\"name\":\"BoughtTiket\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"winner\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"raffle_id\",\"type\":\"uint256\"}],\"name\":\"WinnerEvent\",\"type\":\"event\"},{\"stateMutability\":\"payable\",\"type\":\"fallback\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_raffle_id\",\"type\":\"uint256\"}],\"name\":\"buyTicket\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_newOwner\",\"type\":\"address\"}],\"name\":\"changeOwner\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_ticket_price\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"_raffle_end_balance\",\"type\":\"uint256\"}],\"name\":\"createRaffle\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_raffle_id\",\"type\":\"uint256\"}],\"name\":\"endRaffle\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getAllRaffles\",\"outputs\":[{\"components\":[{\"internalType\":\"uint256\",\"name\":\"id\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"ticket_price\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"raffle_end_balance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"balance\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"winner\",\"type\":\"address\"},{\"internalType\":\"bool\",\"name\":\"is_active\",\"type\":\"bool\"}],\"internalType\":\"struct Raffle.Raffle[]\",\"name\":\"\",\"type\":\"tuple[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getAllTicketHolders\",\"outputs\":[{\"components\":[{\"internalType\":\"address\",\"name\":\"_Address\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"_raffleId\",\"type\":\"uint256\"}],\"internalType\":\"struct Raffle.ticketHolder[]\",\"name\":\"\",\"type\":\"tuple[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getAllWinners\",\"outputs\":[{\"components\":[{\"components\":[{\"internalType\":\"address\",\"name\":\"_Address\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"_raffleId\",\"type\":\"uint256\"}],\"internalType\":\"struct Raffle.ticketHolder\",\"name\":\"winner\",\"type\":\"tuple\"},{\"internalType\":\"uint256\",\"name\":\"raffle_id\",\"type\":\"uint256\"}],\"internalType\":\"struct Raffle.Winner[]\",\"name\":\"\",\"type\":\"tuple[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getContractBalance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getRaffleCount\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_raffle_id\",\"type\":\"uint256\"}],\"name\":\"getRaffleInfo\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"},{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"},{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getTicketHolderCount\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_ticket_holder_id\",\"type\":\"uint256\"}],\"name\":\"getTicketHolderInfo\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_address\",\"type\":\"address\"}],\"name\":\"getTicketsPerAddress\",\"outputs\":[{\"components\":[{\"internalType\":\"address\",\"name\":\"_Address\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"_raffleId\",\"type\":\"uint256\"}],\"internalType\":\"struct Raffle.ticketHolder[]\",\"name\":\"\",\"type\":\"tuple[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getWinnerCount\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_winner_id\",\"type\":\"uint256\"}],\"name\":\"getWinnerInfo\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"withdraw\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}]\n    };\n  }\n\n\n  connect_metamask = async () => {\n    // get window.ethereum and set it to state\n    this.setState({\n      ethereum: window.ethereum\n    });\n    // connect metamask to the dapp\n    await window.ethereum.enable();\n    // get the provider and set it to state\n    this.setState({\n      provider: new ethers.providers.Web3Provider(window.ethereum)\n    });\n    // set to conencted\n    this.setState({\n      connected: true\n    });\n    // get the account and set it to state\\\n    this.setState({\n      account: await this.state.provider.getSigner().getAddress()\n    });\n    // make sure its bsc network\n    // console log all states\n    //console.log(this.state);\n    let chainId = await this.state.provider.getNetwork();\n    chainId = await chainId.chainId;\n    if (chainId !== 56) {\n      alert(\"Please connect to the bsc network\", chainId);\n      console.log(\"Please connect to the bsc network\", chainId);\n      this.setState({\n        connected: false\n      });\n    }\n    // load       raffles: [],\n    this.loadRaffles();\n  }\n\n  save_raffle_id = async (raffle_id) => {\n    // save the raffles we bought to local storage\n    let raffles = await localStorage.getItem(\"raffles\");\n    if (raffles === null) {\n      raffles = [];\n    } else {\n      raffles = JSON.parse(raffles);\n    }\n    raffles.push(raffle_id);\n    await localStorage.setItem(\"raffles\", JSON.stringify(raffles));\n  }\n  check_if_bought = async (raffle_id) => {\n    // check local storage for the raffle id\n    // if found return true\n    // else return false\n    let raffles = await localStorage.getItem(\"raffles\");\n    if (raffles === null) {\n      raffles = [];\n    } else {\n      raffles = JSON.parse(raffles);\n    }\n    console.log(raffles);\n    if (raffles.includes(raffle_id)) {\n      console.log(\"true\");\n      return true;\n    } else {\n      console.log(\"false\");\n\n      return false;\n    }\n  }\n  disconnect_metamask = async () => {\n    this.setState({\n      connected: false\n    });\n  }\n  // contract functions\n  // create raffle\n  // function createRaffle(uint _ticket_price, uint _raffle_end_balance, uint _raffle_end_time) public {\n  //   // check if that raffle is already created\n  //   for(uint i = 0; i < Raffles.length; i++) {\n  //       if(Raffles[i].ticket_price == _ticket_price && Raffles[i].raffle_end_balance == _raffle_end_balance) {\n  //           revert(\"Raffle already created\");\n  //       }\n  //   }\n  //   // _ticket_price can be float\n    \n  //   Raffles.push(Raffle(Raffles.length, _ticket_price, _raffle_end_balance, _raffle_end_time, true));\n  // }\n  create_raffle = async (ticket_price, raffle_end_balance) => {\n    // get the contract\n    const contract = new ethers.Contract(this.state.contract, this.state.abi, this.state.provider.getSigner());\n    // call the function\n    const tx = await contract.createRaffle(ticket_price, raffle_end_balance);\n    // wait for the transaction to be mined\n    await tx.wait();\n    // console log the transaction\n    console.log(tx);\n  }\n  // end raffle\n  end_raffle = async (raffle_id) => {\n    // get the contract\n    const contract = new ethers.Contract(this.state.contract, this.state.abi, this.state.provider.getSigner());\n    // call the function\n    const tx = await contract.endRaffle(raffle_id);\n    // wait for the transaction to be mined\n    await tx.wait();\n    // console log the transaction\n    console.log(tx);\n  }\n  // buy ticket\n  buy_ticket = async (raffle_id, ticket_price) => {\n    // metamask pop up to send the transaction\n    // get the contract\n    alert(\"You can only buy one ticket per raffle, if you buy more than one ticket your transaction will be reverted\");\n    // create the tx\n    var price = ethers.utils.parseEther(ticket_price.substring(2))[\"_hex\"];\n    // to wei\n    // parshe to wei\n    var price_wei = ethers.utils.parseUnits(ticket_price.substring(2), \"wei\")[\"_hex\"];\n    console.log(price);\n    const tx = {\n      from: this.state.account,\n      to: this.state.contract,\n      value: price_wei.toString(),\n      data: new ethers.utils.Interface(this.state.abi).functions.buyTicket.encode([raffle_id])\n    };\n    // ask metamask to send the transaction\n    const send = await this.state.ethereum.send('eth_sendTransaction', [tx]);\n    this.save_raffle_id(raffle_id);\n\n  }\n  // withdraw - Onwer only\n  withdraw = async () => {\n    // get the contract\n    const contract = new ethers.Contract(this.state.contract, this.state.abi, this.state.provider.getSigner());\n    // call the function\n    const tx = await contract.withdraw();\n    // wait for the transaction to be mined\n    await tx.wait();\n    // console log the transaction\n    console.log(tx);\n\n  }\n\n  get_raffles = async () => {\n    // use api https://api-testnet.bscscan.com/api to get raffles with the contract address\n    // https://api-testnet.bscscan.com/api?module=account&action=tokennfttx&contractaddress=0x8c8bdBe9CeE455732525086264a4Bf9Cf821C498&address=0x8c8bdBe9CeE455732525086264a4Bf9Cf821C498&page=1&offset=10&sort=asc&apikey=YourApiKeyToken\n    // contract action is: getAllRaffles\n    // method eth_call \"name\":\"getAllRaffles\",\"outputs\":[{\"components\":[{\"internalType\":\"uint256\",\"name\":\"id\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"ticket_price\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"raffle_end_balance\",\"type\":\"uint256\"}\n\n \n    let url = \"https://blue-ultra-uranium.bsc.discover.quiknode.pro/mktp-2c22977394e703a3fe4d96df6753fe6505373452/\";\n    let data = {\n      \"jsonrpc\":\"2.0\",\n      \"method\":\"eth_call\",\n      \"params\":[\n        {\n          \"to\":this.state.contract,\n          \"data\":\"0x933eea6b\"\n        },\n        \"latest\"\n      ],\n      \"id\":1\n    }\n    let response = await fetch(url, {\n      method: 'POST',\n      body: JSON.stringify(data),\n      headers: {\n        'Content-Type': 'application/json'\n      }\n    });\n    response = await response.json();\n    // decode\n    response = response.result;\n    //console.log(response);\n    // now decode the response and get the array of raffles\n    var result = ethers.utils.defaultAbiCoder.decode([ \"tuple(uint256 id, uint256 ticket_price, uint256 raffle_end_balance, uint256 raffle_end_time, bool active, uint256 balance)[]\" ], response);\n    console.log(result);\n    return result;\n  }\n\n  getRaffleInfo = async (raffle_id) => {\n    // use api https://api-testnet.bscscan.com/api to get raffles with the contract address\n    // https://api-testnet.bscscan.com/api?module=account&action=tokennfttx&contractaddress=0x8c8bdBe9CeE455732525086264a4Bf9Cf821C498&address=0x8c8bdBe9CeE455732525086264a4Bf9Cf821C498&page=1&offset=10&sort=asc&apikey=YourApiKeyToken\n    // contract action is: getAllRaffles\n    // method eth_cal \"name\":\"getRaffleInfo\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"},{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"},{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}]\n\n    // example data for raffle_id = 0 0x27d7e46d0000000000000000000000000000000000000000000000000000000000000000\n    let url = \"https://blue-ultra-uranium.bsc.discover.quiknode.pro/mktp-2c22977394e703a3fe4d96df6753fe6505373452/\";\n    let data = {\n      \"jsonrpc\":\"2.0\",\n      \"method\":\"eth_call\",\n      \"params\":[\n        {\n          \"to\":this.state.contract,\n          \"data\": \"0x27d7e46d\" + raffle_id.toString(16).padStart(64, '0')\n        },\n        \"latest\"\n      ],\n      \"id\":1\n    }\n    let response = await fetch(url, {\n      method: 'POST',\n      body: JSON.stringify(data),\n      headers: {\n        'Content-Type': 'application/json'\n      }\n    });\n    response = await response.json();\n    // decode\n    response = response.result;\n    //console.log(response);\n    // now decode the response and get raffle info, its not tuple\n    var result = ethers.utils.defaultAbiCoder.decode([ \"uint256\", \"uint256\", \"bool\", \"address\", \"uint256\" ], response);\n    // 3rd element is winner return it\n    console.log(result);\n    return result;\n  }\n\n\n \n\n  loadRaffles = async () => {\n    // get all raffles\n    const raffles = await this.get_raffles();\n    // set raffles to state\n    this.setState({\n      raffles: raffles[0]\n    });\n    console.log(this.state.raffles);\n  }\n\n  // ADD FAKE Rafle for ui testing\n\n  fake_raffle = async () => {\n    const raffle = [1,1,1,1,false,1]\n    // add to the array\n    const pushed = this.state.raffles.push(raffle);\n    this.setState({\n      raffles1: pushed\n    });\n    console.log(this.state.raffles1);\n  }\n\n\n  show_navbar = () => {\n    // if connected account address\n    if (this.state.connected) {\n      return (\n        // discconect button\n        <div className=\"navbar\">\n         \n        <a\n        style={{\n          marginRight: \"10px\",\n          color: 'white'\n        }}\n        >\n          {this.state.account}</a>\n        <p></p>\n        <Button variant=\"danger\" style={{\n          fontSize: \"0.9em\",\n        }} onClick={this.disconnect_metamask}>Disconnect</Button>\n      </div>\n      );\n    }\n    // if not connected show connect button\n    else {\n      return (\n        <div className=\"navbar\">\n          <Button variant=\"success\" style={{\n            fontSize: \"0.9em\",\n          }} onClick={this.connect_metamask}> Connect Metamask </Button>\n        </div>\n      );\n    }\n  }\n  \n\n  show_raffle = (raffle) => {\n    // if raffle is active\n    console.log(this.getRaffleInfo(raffle[0] - 1)[3]);\n    // new one with boostrap cards\n    if (!raffle[4]) {\n      return (\n        <Card style={{ width: '18rem' }}>\n          <Card.Body>\n            <Card.Title>Raffle ID: {raffle[0].toString()}</Card.Title>\n            <Card.Text>\n              Raffle balance: {ethers.utils.formatUnits(raffle[3].toString(), \"ether\")} <br />\n              Raffle Prize Pool: {ethers.utils.formatUnits(raffle[2].toString(), \"ether\")} <br />\n              Ticket Price: {ethers.utils.formatUnits(raffle[1].toString(), \"ether\")}\n            </Card.Text>\n            <ProgressBar  variant=\"success\" style={{ margin: \"5px\"}} now={raffle[3].toString() / raffle[2].toString() * 100}  />\n            <Button variant=\"success\" style={{\n              fontSize: \"0.9em\",\n            }} onClick={() => this.buy_ticket(raffle[0] - 1, \"0x\" + raffle[1].toString())}>Buy Ticket</Button> \n      \n          </Card.Body>\n        </Card>\n      );\n    }\n    else {\n      console.log(this.getRaffleInfo(raffle[0] - 1)[3]);\n      return (\n        // console log getRaffleInfo\n        <Card style={{ width: '18rem' }}>\n          <Card.Body>\n            <Card.Title>Raffle ID: {raffle[0].toString()}</Card.Title>\n            <Card.Text>\n              Raffle Prize Pool: {ethers.utils.formatUnits(raffle[2].toString(), \"ether\")} <br />\n              Ticket Price: {ethers.utils.formatUnits(raffle[1].toString(), \"ether\")} <br />\n              <ProgressBar  variant=\"success\" style={{ margin: \"5px\"}} now={100} label={`100%`} />\n              Raffle Ended <br />\n            </Card.Text>\n          </Card.Body>\n        </Card>\n      );\n    }\n  }\n  show_owner = () => {\n    // if owner\n    if (this.state.owner == this.state.account) {\n      if (!this.state.admin) {\n        // show admin panel, this.state.admin == true\n        return (\n          <div className=\"admin_panel\">\n            <Button variant=\"success\" style={{\n              fontSize: \"0.9em\",\n              margin: \"10px\"\n            }} onClick={() => this.setState({admin: true})}>Show Admin Panel</Button>\n          </div>\n        );\n      }  else {\n      // card boostrap vesrion\n      return (\n        <Card style={{margin: \"10px\" }}>\n          <Card.Body>\n            <Card.Title>Admin panel: {this.state.owner}</Card.Title>\n            <Card.Text>\n            <div className=\"admin_panel\">\n            <Button variant=\"success\" style={{\n              fontSize: \"0.9em\",\n            }} onClick={() => this.setState({admin: false})}>Hide Admin Panel</Button>\n          </div>\n          <div className=\"owner_buttons\">\n            <Button variant=\"success\" style={{\n              fontSize: \"0.9em\",\n            }} onClick={() => this.withdraw()}>Withdraw</Button>\n          </div>\n          <div className=\"owner_buttons\">\n            <Button variant=\"success\" style={{\n              fontSize: \"0.9em\",\n            }} onClick={() => this.fake_raffle()}>fake raffle</Button>\n          </div>\n          <p></p>\n          <div className=\"owner_create_raffle\">\n            <p>Create Raffle</p>\n            <input type=\"number\" placeholder=\"Ticket Price\" onChange={(e) => this.setState({ticket_price: e.target.value})}></input>\n            <input type=\"number\" placeholder=\"Raffle End Balance\" onChange={(e) => this.setState({raffle_end_balance: e.target.value})}></input>\n            <Button variant=\"success\" style={{\n              fontSize: \"0.9em\",\n            }} onClick={() => this.create_raffle(this.state.ticket_price, this.state.raffle_end_balance)}>Create Raffle</Button>\n          </div>\n          <div className=\"owner_end_raffle\">\n            <p>End Raffle</p>\n            <input type=\"number\" placeholder=\"Raffle ID\" onChange={(e) => this.setState({raffle_id: e.target.value})}></input>\n            <Button variant=\"success\" style={{\n              fontSize: \"0.9em\",\n            }} onClick={() => this.end_raffle(this.state.raffle_id)}>End Raffle</Button>\n          </div>\n            </Card.Text>\n          </Card.Body>\n        </Card>\n      );\n    }\n  }\n\n  }\n\n  show_raffles = () => {\n    // if raffles are loaded\n    if (this.state.raffles) {\n      // stack raflles like 4 in a row\n\n      return (\n        <div className=\"raffles\"\n          style={{\n            margin: \"40px\",\n            display: \"flex\",\n            flexWrap: \"wrap\"\n          }}\n        >\n          <div className=\"raffles_row\"           \n          style={{\n            margin: \"40px\",\n            display: \"flex\",\n            flexWrap: \"wrap\"\n          }}>\n            {this.state.raffles.map((raffle) => {\n              return (\n                <div className=\"raffle\"           style={{\n                  margin: \"40px\",\n                  display: \"flex\",\n                  flexWrap: \"wrap\"\n                }}>\n                  {this.show_raffle(raffle)}\n                </div>\n              );\n            }\n            )}\n          </div>\n        </div>\n      );\n    }\n  }\n  show_fotter = () => {\n    return (\n      <footer className=\"App-footer\">\n      <p>\n        Made by RXC Games Team \n      </p>\n    </footer>\n    );\n  }\n  show_before_connect = () => {\n    if (!this.state.connected) {\n      return (\n        <div>\n        <div className=\"App\">\n          <header className=\"App-header\">\n            <h1>\n              Connect your Metamask wallet <img height={\"150px\"} src=\"https://external-content.duckduckgo.com/iu/?u=https%3A%2F%2Ftse4.mm.bing.net%2Fth%3Fid%3DOIP.zYmdj6UmqwVqR1yykWvBJwAAAA%26pid%3DApi&f=1&ipt=7ce3cf5c57dddac92d4f9364902c6e0e24e228c91a2a48c4da655f299b5eca8b&ipo=images\"></img>\n            </h1>\n            <h2>\n              How it works: <br />\n            </h2>\n            <p style={{textAlign: \"left\"}}>\n              1. Connect your Metamask wallet <br />\n              2. Buy ticket for raffle <br />\n              3. When raffle balance is same as prize pool, raffle will end <br />\n              4. Winner will be chosen randomly <br />\n              5. Winner will get all the money from prize pool (minus 1% fee) <br />\n            </p>\n            <small>\n              We do not take any responsibility for any losses, tickets are non-refundable.\n            </small>\n          </header>\n        </div>\n        {this.show_fotter()}\n        </div>\n      );\n    } else {\n      return (\n        <div className=\"App\">\n          <header className=\"App-header\">\n            {this.show_owner()}\n            {this.state.raffles ? this.show_raffles() : <p>Loading<img src={\"https://media2.giphy.com/media/3oEjI6SIIHBdRxXI40/giphy.gif?cid=790b7611bd9b916ae2ce9fdb242416c7b6f0bc2355d31404&rid=giphy.gif&ct=g\"} className=\"App-logo\" alt=\"logo\" width={\"50px\"} height={\"50px\"} /></p>}\n          </header>\n        </div>\n      );\n    }\n  }\n\n  render() {\n    return (\n      <div>\n        <nav style={{\n            fontSize: \"0.9em\",\n          }} className=\"navbar navbar-dark fixed-top bg-dark flex-md-nowrap p-0 shadow\">\n          <a\n            className=\"navbar-brand col-sm-3 col-md-2 mr-0\"\n            href=\"\"\n              target=\"_blank\"\n            rel=\"noopener noreferrer\"\n          >\n            <img src='https://rxcgames.com/static/media/logo.c4003442.svg' height={'45x'}></img> Welcome to Raffle\n          </a>\n          {this.show_navbar()}\n        </nav>\n        <div className=\"container-fluid mt-5\">\n          <div className=\"row\">\n            <main role=\"main\" className=\"col-lg-12 d-flex text-center\">\n              <div className=\"content mr-auto ml-auto\">\n                {this.show_before_connect()}\n              </div>\n            </main>\n          </div>\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport 'bootstrap/dist/css/bootstrap.css'\nimport App from './components/App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}