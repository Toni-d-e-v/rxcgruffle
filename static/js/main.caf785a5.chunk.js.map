{"version":3,"sources":["components/App.js","serviceWorker.js","index.js"],"names":["App","props","_this","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","connect_metamask","asyncToGenerator","regenerator_default","a","mark","_callee","chainId","wrap","_context","prev","next","setState","ethereum","window","enable","provider","ethers","providers","Web3Provider","connected","t0","state","getSigner","getAddress","t1","sent","t2","account","getNetwork","alert","console","log","loadRaffles","stop","save_raffle_id","_ref2","_callee2","raffle_id","raffles","_context2","localStorage","getItem","JSON","parse","push","setItem","stringify","_x","apply","arguments","is_remvoed","includes","toString","remove_raffle_id","_ref3","_callee3","_context3","_x2","check_if_bought","_ref4","_callee4","_context4","abrupt","_x3","disconnect_metamask","_callee5","_context5","create_raffle","_ref6","_callee6","ticket_price","raffle_end_balance","contract","tx","_context6","Contract","abi","createRaffle","wait","_x4","_x5","create_raffle_erc20","_ref7","_callee7","_context7","createERC20Raffle","_x6","_x7","end_raffle","_ref8","_callee8","_context8","endRaffle","_x8","buy_ticket","_ref9","_callee9","price","price_wei","_context9","utils","parseEther","substring","parseUnits","from","to","value","data","Interface","functions","buyTicket","encode","send","_x9","_x10","buy_ticket_erc20","_ref10","_callee10","tx2","_context10","buyTicketWithERC20","erc20","erc20_abi","approve","_x11","_x12","withdraw","_callee11","_context11","get_raffles","_callee12","url","response","result","_context12","api","jsonrpc","method","params","id","fetch","body","headers","Content-Type","json","defaultAbiCoder","decode","getRaffleInfo","_ref13","_callee13","_context13","padStart","_x13","_callee14","_context14","fake_raffle","_callee15","raffle","pushed","_context15","raffles1","show_navbar","react_default","createElement","className","style","marginRight","color","Button","variant","fontSize","onClick","show_raffle","is_erc20","Card","width","Body","float","Title","Text","formatUnits","ProgressBar_default","margin","now","label","undefined","height","src","rxcg_logo","disabled","bnb_logo","show_owner","owner","admin","type","placeholder","onChange","e","target","show_raffles","display","flexWrap","map","show_fotter","show_before_connect","alt","textAlign","constant","inputs","name","outputs","payable","stateMutability","anonymous","indexed","internalType","components","href","rel","role","Component","Boolean","location","hostname","match","ReactDOM","render","src_components_App","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.caf785a5.chunk.js","sourcesContent":["import React, { Component } from 'react';\nimport './App.css';\nimport { ethers } from \"ethers\";\nimport ProgressBar from 'react-bootstrap/ProgressBar';\n// import web3\nimport Web3 from 'web3';\nimport { Button, Form, FormGroup, Label, Input, FormText, Card } from 'react-bootstrap';\nimport abiDecoder from 'abi-decoder';\nclass App extends Component {\n  // connect metamask to the dapp, and create state with window.ethereum\n  // init state\n  \n  constructor(props) {\n    super(props);\n    this.state = {\n      bnb_logo:\"http://icons.iconarchive.com/icons/cjdowner/cryptocurrency-flat/1024/Binance-Coin-BNB-icon.png\",\n      rxcg_logo:\"https://raw.githubusercontent.com/Toni-d-e-v/rxcgruffle/main/photo_2022-10-07_22-18-55.jpg\",\n      ethereum: null,\n      provider: null,\n      connected: false,\n      account: null,\n      admin: false,\n      contract: \"0x40775d3e436eb449cf44cfda4c77f756d897e0fb\",\n      erc20: \"0x7c59a57fc16eac270421b74615c4bc009ecd486d\",\n      erc20_abi:[{\"constant\":true,\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"name\":\"\",\"type\":\"string\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_spender\",\"type\":\"address\"},{\"name\":\"_value\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_from\",\"type\":\"address\"},{\"name\":\"_to\",\"type\":\"address\"},{\"name\":\"_value\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"name\":\"\",\"type\":\"uint8\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"_owner\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"name\":\"balance\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"name\":\"\",\"type\":\"string\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_to\",\"type\":\"address\"},{\"name\":\"_value\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"_owner\",\"type\":\"address\"},{\"name\":\"_spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"payable\":true,\"stateMutability\":\"payable\",\"type\":\"fallback\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"}] ,\n      owner: \"0xB0061ACb424DB252D52a9E97B90824300855885E\",\n      raffles: null,\n      raffles1: null,\n      api: \"https://cosmopolitan-icy-smoke.bsc.discover.quiknode.pro/ed90afbd227d7a9524422b3687a4316bee783b5d/\",\n      abi: [{\"inputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"_from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"_id\",\"type\":\"bytes32\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"_value\",\"type\":\"uint256\"}],\"name\":\"BoughtTicket\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"winner\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"raffle_id\",\"type\":\"uint256\"}],\"name\":\"WinnerEvent\",\"type\":\"event\"},{\"stateMutability\":\"payable\",\"type\":\"fallback\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_raffle_id\",\"type\":\"uint256\"}],\"name\":\"buyTicket\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_raffle_id\",\"type\":\"uint256\"}],\"name\":\"buyTicketWithERC20\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_newFee\",\"type\":\"uint256\"}],\"name\":\"changeFee\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_newOwner\",\"type\":\"address\"}],\"name\":\"changeOwner\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_ticket_price\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"_raffle_end_balance\",\"type\":\"uint256\"}],\"name\":\"createERC20Raffle\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_ticket_price\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"_raffle_end_balance\",\"type\":\"uint256\"}],\"name\":\"createRaffle\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_raffle_id\",\"type\":\"uint256\"}],\"name\":\"endRaffle\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_amount\",\"type\":\"uint256\"}],\"name\":\"feeTest\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getAllRaffles\",\"outputs\":[{\"components\":[{\"internalType\":\"uint256\",\"name\":\"id\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"ticket_price\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"raffle_end_balance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"balance\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"winner\",\"type\":\"address\"},{\"internalType\":\"bool\",\"name\":\"is_active\",\"type\":\"bool\"},{\"internalType\":\"bool\",\"name\":\"erc20\",\"type\":\"bool\"}],\"internalType\":\"struct Raffle.Raffle[]\",\"name\":\"\",\"type\":\"tuple[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getAllTicketHolders\",\"outputs\":[{\"components\":[{\"internalType\":\"address\",\"name\":\"_Address\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"_raffleId\",\"type\":\"uint256\"}],\"internalType\":\"struct Raffle.ticketHolder[]\",\"name\":\"\",\"type\":\"tuple[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getAllWinners\",\"outputs\":[{\"components\":[{\"components\":[{\"internalType\":\"address\",\"name\":\"_Address\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"_raffleId\",\"type\":\"uint256\"}],\"internalType\":\"struct Raffle.ticketHolder\",\"name\":\"winner\",\"type\":\"tuple\"},{\"internalType\":\"uint256\",\"name\":\"raffle_id\",\"type\":\"uint256\"}],\"internalType\":\"struct Raffle.Winner[]\",\"name\":\"\",\"type\":\"tuple[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getContractBalance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getFee\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getRaffleCount\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_raffle_id\",\"type\":\"uint256\"}],\"name\":\"getRaffleInfo\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"},{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"},{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"},{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getTicketHolderCount\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_ticket_holder_id\",\"type\":\"uint256\"}],\"name\":\"getTicketHolderInfo\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_address\",\"type\":\"address\"}],\"name\":\"getTicketsPerAddress\",\"outputs\":[{\"components\":[{\"internalType\":\"address\",\"name\":\"_Address\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"_raffleId\",\"type\":\"uint256\"}],\"internalType\":\"struct Raffle.ticketHolder[]\",\"name\":\"\",\"type\":\"tuple[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getWinnerCount\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_winner_id\",\"type\":\"uint256\"}],\"name\":\"getWinnerInfo\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"withdraw\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}]\n    };\n  }\n\n\n  connect_metamask = async () => {\n    // get window.ethereum and set it to state\n    this.setState({\n      ethereum: window.ethereum\n    });\n    // connect metamask to the dapp\n    await window.ethereum.enable();\n    // get the provider and set it to state\n    this.setState({\n      provider: new ethers.providers.Web3Provider(window.ethereum)\n    });\n    // set to conencted\n    this.setState({\n      connected: true\n    });\n    // get the account and set it to state\\\n    this.setState({\n      account: await this.state.provider.getSigner().getAddress()\n    });\n    // make sure its bsc network\n    // console log all states\n    //console.log(this.state);\n    let chainId = await this.state.provider.getNetwork();\n    chainId = await chainId.chainId;\n    if (chainId !== 56) {\n      alert(\"Please connect to the bsc network\", chainId);\n      console.log(\"Please connect to the bsc network\", chainId);\n      this.setState({\n        connected: false\n      });\n    }\n    // load       raffles: [],\n    this.loadRaffles();\n  }\n\n  save_raffle_id = async (raffle_id) => {\n    // save the raffles we bought to local storage\n    let raffles = await localStorage.getItem(\"raffles\");\n    if (raffles === null) {\n      raffles = [];\n    } else {\n      raffles = JSON.parse(raffles);\n    }\n    raffles.push(raffle_id);\n    await localStorage.setItem(\"raffles\", JSON.stringify(raffles));\n  }\n\n  is_remvoed = (raffle_id) => {\n    // check if the raffle is removed\n    let raffles = localStorage.getItem(\"raffles_removed\");\n    if (raffles === null) {\n      raffles = [];\n      return true;\n    } else {\n    raffles = JSON.parse(raffles);\n    if (raffles.includes(raffle_id.toString())) {\n      return false;\n    }\n    return true;\n    }\n  }\n  remove_raffle_id = async (raffle_id) => {\n    // remove the raffles if user wants to\n    let raffles = localStorage.getItem(\"raffles_removed\");\n    raffles = JSON.parse(raffles);\n    if (raffles === null) {\n      raffles = [];\n    }\n    raffles.push(raffle_id.toString());\n    await localStorage.setItem(\"raffles_removed\", JSON.stringify(raffles));\n    // reload the raffles\n    this.loadRaffles();\n\n  }\n  \n  check_if_bought = async (raffle_id) => {\n    // check local storage for the raffle id\n    // if found return true\n    // else return false\n    let raffles = await localStorage.getItem(\"raffles\");\n    if (raffles === null) {\n      raffles = [];\n    } else {\n      raffles = JSON.parse(raffles);\n    }\n    console.log(raffles);\n    if (raffles.includes(raffle_id)) {\n      console.log(\"true\");\n      return true;\n    } else {\n      console.log(\"false\");\n\n      return false;\n    }\n  }\n  disconnect_metamask = async () => {\n    this.setState({\n      connected: false\n    });\n  }\n  // contract functions\n  // create raffle\n  // function createRaffle(uint _ticket_price, uint _raffle_end_balance, uint _raffle_end_time) public {\n  //   // check if that raffle is already created\n  //   for(uint i = 0; i < Raffles.length; i++) {\n  //       if(Raffles[i].ticket_price == _ticket_price && Raffles[i].raffle_end_balance == _raffle_end_balance) {\n  //           revert(\"Raffle already created\");\n  //       }\n  //   }\n  //   // _ticket_price can be float\n    \n  //   Raffles.push(Raffle(Raffles.length, _ticket_price, _raffle_end_balance, _raffle_end_time, true));\n  // }\n  create_raffle = async (ticket_price, raffle_end_balance) => {\n    // get the contract\n    const contract = new ethers.Contract(this.state.contract, this.state.abi, this.state.provider.getSigner());\n    // call the function\n    const tx = await contract.createRaffle(ticket_price, raffle_end_balance);\n    // wait for the transaction to be mined\n    await tx.wait();\n    // console log the transaction\n    console.log(tx);\n  }\n  // create raffle erc20\n  create_raffle_erc20 = async (ticket_price, raffle_end_balance) => {\n    // get the contract\n    const contract = new ethers.Contract(this.state.contract, this.state.abi, this.state.provider.getSigner());\n    // call the function\n    const tx = await contract.createERC20Raffle(ticket_price, raffle_end_balance);\n    // wait for the transaction to be mined\n    await tx.wait();\n    // console log the transaction\n    console.log(tx);\n  }\n\n  // end raffle\n  end_raffle = async (raffle_id) => {\n    // get the contract\n    const contract = new ethers.Contract(this.state.contract, this.state.abi, this.state.provider.getSigner());\n    // call the function\n    const tx = await contract.endRaffle(raffle_id);\n    // wait for the transaction to be mined\n    await tx.wait();\n    // console log the transaction\n    console.log(tx);\n  }\n  // buy ticket\n  buy_ticket = async (raffle_id, ticket_price) => {\n    // metamask pop up to send the transaction\n    // get the contract\n    alert(\"You can only buy one ticket per raffle, if you buy more than one ticket your transaction will be reverted\");\n    // create the tx\n    var price = ethers.utils.parseEther(ticket_price.substring(2))[\"_hex\"];\n    // to wei\n    // parshe to wei\n    var price_wei = ethers.utils.parseUnits(ticket_price.substring(2), \"wei\")[\"_hex\"];\n    console.log(price);\n    const tx = {\n      from: this.state.account,\n      to: this.state.contract,\n      value: price_wei.toString(),\n      data: new ethers.utils.Interface(this.state.abi).functions.buyTicket.encode([raffle_id])\n    };\n    // ask metamask to send the transaction\n    const send = await this.state.ethereum.send('eth_sendTransaction', [tx]);\n    this.save_raffle_id(raffle_id);\n\n  }\n  // buy ticket erc20\n  buy_ticket_erc20 = async (raffle_id, ticket_price) => {\n    // metamask pop up to send the transaction\n    // get the contract\n    alert(\"You can only buy one ticket per raffle, if you buy more than one ticket your transaction will be reverted\");\n    const tx = {\n      from: this.state.account,\n      to: this.state.contract,\n      data: new ethers.utils.Interface(this.state.abi).functions.buyTicketWithERC20.encode([raffle_id])\n    };\n    // now tx to approve the contract to spend your tokens\n    const tx2 = {\n      from: this.state.account,\n      to: this.state.erc20,\n      data: new ethers.utils.Interface(this.state.erc20_abi).functions.approve.encode([this.state.contract, ticket_price])\n    };\n    // ask metamask to send the transaction\n    const send1 = await this.state.ethereum.send('eth_sendTransaction', [tx2]);\n    const send = await this.state.ethereum.send('eth_sendTransaction', [tx]);\n    this.save_raffle_id(raffle_id);\n  }\n  // withdraw - Onwer only\n  withdraw = async () => {\n    // get the contract\n    const contract = new ethers.Contract(this.state.contract, this.state.abi, this.state.provider.getSigner());\n    // call the function\n    const tx = await contract.withdraw();\n    // wait for the transaction to be mined\n    await tx.wait();\n    // console log the transaction\n    console.log(tx);\n\n  }\n\n  get_raffles = async () => {\n    // use api https://api-testnet.bscscan.com/api to get raffles with the contract address\n    // https://api-testnet.bscscan.com/api?module=account&action=tokennfttx&contractaddress=0x8c8bdBe9CeE455732525086264a4Bf9Cf821C498&address=0x8c8bdBe9CeE455732525086264a4Bf9Cf821C498&page=1&offset=10&sort=asc&apikey=YourApiKeyToken\n    // contract action is: getAllRaffles\n    // method eth_call \"name\":\"getAllRaffles\",\"outputs\":[{\"components\":[{\"internalType\":\"uint256\",\"name\":\"id\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"ticket_price\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"raffle_end_balance\",\"type\":\"uint256\"}\n\n \n    let url = this.state.api;\n    let data = {\n      \"jsonrpc\":\"2.0\",\n      \"method\":\"eth_call\",\n      \"params\":[\n        {\n          \"to\":this.state.contract,\n          \"data\":\"0x933eea6b\"\n        },\n        \"latest\"\n      ],\n      \"id\":1\n    }\n    let response = await fetch(url, {\n      method: 'POST',\n      body: JSON.stringify(data),\n      headers: {\n        'Content-Type': 'application/json'\n      }\n    });\n    response = await response.json();\n    // decode\n    response = response.result;\n    //console.log(response);\n    // now decode the response and get the array of raffles\n    var result = ethers.utils.defaultAbiCoder.decode([ \"tuple(uint256 id, uint256 ticket_price, uint256 raffle_end_balance, uint256 raffle_end_time, bool active, uint256 balance, bool is_erc20)[]\" ], response);\n    console.log(result);\n    return result;\n  }\n\n  getRaffleInfo = async (raffle_id) => {\n    // use api https://api-testnet.bscscan.com/api to get raffles with the contract address\n    // https://api-testnet.bscscan.com/api?module=account&action=tokennfttx&contractaddress=0x8c8bdBe9CeE455732525086264a4Bf9Cf821C498&address=0x8c8bdBe9CeE455732525086264a4Bf9Cf821C498&page=1&offset=10&sort=asc&apikey=YourApiKeyToken\n    // contract action is: getAllRaffles\n    // method eth_cal \"name\":\"getRaffleInfo\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"},{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"},{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}]\n\n    // example data for raffle_id = 0 0x27d7e46d0000000000000000000000000000000000000000000000000000000000000000\n    let url = this.state.api;\n    let data = {\n      \"jsonrpc\":\"2.0\",\n      \"method\":\"eth_call\",\n      \"params\":[\n        {\n          \"to\":this.state.contract,\n          \"data\": \"0x27d7e46d\" + raffle_id.toString(16).padStart(64, '0')\n        },\n        \"latest\"\n      ],\n      \"id\":1\n    }\n    let response = await fetch(url, {\n      method: 'POST',\n      body: JSON.stringify(data),\n      headers: {\n        'Content-Type': 'application/json'\n      }\n    });\n    response = await response.json();\n    // decode\n    response = response.result;\n    //console.log(response);\n    // now decode the response and get raffle info, its not tuple\n    var result = ethers.utils.defaultAbiCoder.decode([ \"uint256\", \"uint256\", \"bool\", \"address\", \"uint256\", \"bool\" ], response);\n    // 3rd element is winner return it\n    console.log(result);\n    return result;\n  }\n\n\n \n\n  loadRaffles = async () => {\n    // get all raffles\n    const raffles = await this.get_raffles();\n    // set raffles to state\n    this.setState({\n      raffles: raffles[0]\n    });\n    console.log(this.state.raffles);\n  }\n\n  // ADD FAKE Rafle for ui testing\n\n  fake_raffle = async () => {\n    const raffle = [1,1,1,1,false,1]\n    // add to the array\n    const pushed = this.state.raffles.push(raffle);\n    this.setState({\n      raffles1: pushed\n    });\n    console.log(this.state.raffles1);\n  }\n\n\n  show_navbar = () => {\n    // if connected account address\n    if (this.state.connected) {\n      return (\n        // discconect button\n        <div className=\"navbar\">\n         \n        <a\n        style={{\n          marginRight: \"10px\",\n          color: 'white'\n        }}\n        >\n          {this.state.account}</a>\n        <p></p>\n        <Button variant=\"danger\" style={{\n          fontSize: \"0.9em\",\n        }} onClick={this.disconnect_metamask}>Disconnect</Button>\n      </div>\n      );\n    }\n    // if not connected show connect button\n    else {\n      return (\n        <div className=\"navbar\">\n          <Button variant=\"success\" style={{\n            fontSize: \"0.9em\",\n          }} onClick={this.connect_metamask}> Connect Metamask </Button>\n        </div>\n      );\n    }\n  }\n  \n\n  show_raffle = (raffle) => {\n    // if raffle is active\n    console.log(this.getRaffleInfo(raffle[0] - 1)[3]);\n    // new one with boostrap cards\n    // raflle[0] - 1 because raffle id starts from 1\n    // raffle [5] if true its erc20\n    const is_erc20 = raffle[\"is_erc20\"];\n    console.log(is_erc20);\n    if (!raffle[4]) {\n      if (is_erc20 == undefined) {\n        return (\n          <p>shit</p>\n        );\n      } else {\n        // return if true true is erc20\n        if (!is_erc20) {\n          return (\n            <Card style={{ width: '18rem' }}>\n              <Card.Body>\n                <Card.Title>Raffle ID: {raffle[0].toString()}</Card.Title>\n                <Card.Text>\n                  Raffle balance: {ethers.utils.formatUnits(raffle[3].toString(), \"ether\")} BNB <img height={\"15px\"} src={this.state.bnb_logo}></img><br />\n                  Raffle Prize Pool: {ethers.utils.formatUnits(raffle[2].toString(), \"ether\")} BNB <img height={\"15px\"} src={this.state.bnb_logo}></img> <br />\n                  Ticket Price: {ethers.utils.formatUnits(raffle[1].toString(), \"ether\")} BNB  <img height={\"15px\"} src={this.state.bnb_logo}></img> <br />\n                </Card.Text>\n                <ProgressBar  variant=\"success\" style={{ margin: \"5px\"}} now={raffle[3].toString() / raffle[2].toString() * 100}  />\n                { this.check_if_bought(raffle[0] - 1) ? \n                <Button variant=\"success\" style={{\n                                  fontSize: \"0.9em\",\n                }} onClick={() => this.buy_ticket(raffle[0] - 1, \"0x\" + raffle[1].toString())}>Buy Ticket</Button> : \n                <Button variant=\"success\" style={{\n                  fontSize: \"0.9em\",\n                }} disabled>You bought ticket</Button> \n                }\n              </Card.Body>\n            </Card>\n          );\n        } else  {\n          if (true) {\n          return (\n            <Card style={{ width: '18rem' }}>\n              <Card.Body>\n                <Card.Title>Raffle ID: {raffle[0].toString()}</Card.Title>\n                <Card.Text>\n                  Raffle balance: {ethers.utils.formatUnits(raffle[3].toString(), \"ether\")} RXCG <img height={\"15px\"} src={this.state.rxcg_logo}></img><br />\n                  Raffle Prize Pool: {ethers.utils.formatUnits(raffle[2].toString(), \"ether\")} RXCG <img height={\"15px\"} src={this.state.rxcg_logo}></img> <br />\n                  Ticket Price: {ethers.utils.formatUnits(raffle[1].toString(), \"ether\")} RXCG <img height={\"15px\"} src={this.state.rxcg_logo}></img> <br />\n                </Card.Text>\n                <ProgressBar  variant=\"success\" style={{ margin: \"5px\"}} now={raffle[3].toString() / raffle[2].toString() * 100}  />\n                { this.check_if_bought(raffle[0] - 1) ? \n                <Button variant=\"success\" style={{\n                                  fontSize: \"0.9em\",\n                }} onClick={() => this.buy_ticket_erc20(raffle[0] - 1, \"0x\" + raffle[1].toString())}>Buy Ticket</Button> : \n                <Button variant=\"success\" style={{\n                  fontSize: \"0.9em\",\n                }} disabled>You bought ticket</Button> \n                }\n              </Card.Body>\n            </Card>\n          );\n          }\n        }\n\n      }\n\n    }\n    else {\n      console.log(this.getRaffleInfo(raffle[0] - 1)[3]);\n      if (this.is_remvoed(raffle[0])) {\n      return (\n        // console log getRaffleInfo add X button\n        <Card style={{ width: '18rem' }}>\n          <Card.Body>\n            {/* x button */}\n            <Button variant=\"danger\" style={{\n              fontSize: \"0.5sem\",\n              float: \"right\"\n            }} onClick={() => this.remove_raffle_id(raffle[0])}>X</Button>\n            <Card.Title>Raffle ID: {raffle[0].toString()} </Card.Title>\n            <Card.Text>\n              Raffle Prize Pool: {ethers.utils.formatUnits(raffle[2].toString(), \"ether\")} <br />\n              Ticket Price: {ethers.utils.formatUnits(raffle[1].toString(), \"ether\")} <br />\n              <ProgressBar  variant=\"success\" style={{ margin: \"5px\"}} now={100} label={`100%`} />\n              Raffle Ended <br />\n            </Card.Text>\n          </Card.Body>\n        </Card>\n      );\n    }\n  }\n  }\n  show_owner = () => {\n    // if owner\n    if (this.state.owner == this.state.account) {\n      if (!this.state.admin) {\n        // show admin panel, this.state.admin == true\n        return (\n          <div className=\"admin_panel\">\n            <Button variant=\"success\" style={{\n              fontSize: \"0.9em\",\n              margin: \"10px\"\n            }} onClick={() => this.setState({admin: true})}>Show Admin Panel</Button>\n          </div>\n        );\n      }  else {\n      // card boostrap vesrion\n      return (\n        <Card style={{margin: \"10px\" }}>\n          <Card.Body>\n            <Card.Title>Admin panel: {this.state.owner}</Card.Title>\n            <Card.Text>\n            <div className=\"admin_panel\">\n            <Button variant=\"success\" style={{\n              fontSize: \"0.9em\",\n            }} onClick={() => this.setState({admin: false})}>Hide Admin Panel</Button>\n          </div>\n          <div className=\"owner_buttons\">\n            <Button variant=\"success\" style={{\n              fontSize: \"0.9em\",\n            }} onClick={() => this.withdraw()}>Withdraw</Button>\n          </div>\n          <div className=\"owner_buttons\">\n            <Button variant=\"success\" style={{\n              fontSize: \"0.9em\",\n            }} onClick={() => this.fake_raffle()}>fake raffle</Button>\n          </div>\n          <p></p>\n          <div className=\"owner_create_raffle\">\n            <p>Create Raffle</p>\n            <input type=\"number\" placeholder=\"Ticket Price\" onChange={(e) => this.setState({ticket_price: e.target.value})}></input>\n            <input type=\"number\" placeholder=\"Raffle End Balance\" onChange={(e) => this.setState({raffle_end_balance: e.target.value})}></input>\n            <Button variant=\"success\" style={{\n              fontSize: \"0.9em\",\n            }} onClick={() => this.create_raffle(this.state.ticket_price, this.state.raffle_end_balance)}>Create Raffle</Button>\n          </div>\n          <div className=\"owner_create_raffle\">\n            <p>Create Raffle</p>\n            <input type=\"number\" placeholder=\"Ticket Price\" onChange={(e) => this.setState({ticket_price: e.target.value})}></input>\n            <input type=\"number\" placeholder=\"Raffle End Balance\" onChange={(e) => this.setState({raffle_end_balance: e.target.value})}></input>\n            <Button variant=\"success\" style={{\n              fontSize: \"0.9em\",\n            }} onClick={() => this.create_raffle_erc20(this.state.ticket_price, this.state.raffle_end_balance)}>Create RXCG</Button>\n          </div>\n          <div className=\"owner_end_raffle\">\n            <p>End Raffle</p>\n            <input type=\"number\" placeholder=\"Raffle ID\" onChange={(e) => this.setState({raffle_id: e.target.value})}></input>\n            <Button variant=\"success\" style={{\n              fontSize: \"0.9em\",\n            }} onClick={() => this.end_raffle(this.state.raffle_id)}>End Raffle</Button>\n          </div>\n            </Card.Text>\n          </Card.Body>\n        </Card>\n      );\n    }\n  }\n\n  }\n\n  show_raffles = () => {\n    // if raffles are loaded\n    if (this.state.raffles) {\n      // stack raflles like 4 in a row\n\n      return (\n        <div className=\"raffles\"\n          style={{\n            margin: \"40px\",\n            display: \"flex\",\n            flexWrap: \"wrap\"\n          }}\n        >\n          <div className=\"raffles_row\"           \n          style={{\n            margin: \"40px\",\n            display: \"flex\",\n            flexWrap: \"wrap\"\n          }}>\n            {this.state.raffles.map((raffle) => {\n              return (\n                <div className=\"raffle\"           style={{\n                  margin: \"40px\",\n                  display: \"flex\",\n                  flexWrap: \"wrap\"\n                }}>\n                  {this.show_raffle(raffle)}\n                </div>\n              );\n            }\n            )}\n          </div>\n        </div>\n      );\n    }\n  }\n  show_fotter = () => {\n    return (\n      <footer className=\"App-footer\">\n      <p>\n        Made by RXC Games Team \n      </p>\n    </footer>\n    );\n  }\n  show_before_connect = () => {\n    if (!this.state.connected) {\n      return (\n        <div>\n        <div className=\"App\">\n          <header className=\"App-header\">\n            <h1>\n              Connect your Metamask wallet <img height={\"150px\"} src=\"https://external-content.duckduckgo.com/iu/?u=https%3A%2F%2Ftse4.mm.bing.net%2Fth%3Fid%3DOIP.zYmdj6UmqwVqR1yykWvBJwAAAA%26pid%3DApi&f=1&ipt=7ce3cf5c57dddac92d4f9364902c6e0e24e228c91a2a48c4da655f299b5eca8b&ipo=images\"></img>\n            </h1>\n            <h2>\n              How it works: <br />\n            </h2>\n            <p style={{textAlign: \"left\"}}>\n              1. Connect your Metamask wallet <br />\n              2. Buy ticket for raffle <br />\n              3. When raffle balance is same as prize pool, raffle will end <br />\n              4. Winner will be chosen randomly <br />\n              5. Winner will get all the money from prize pool (minus 1% fee) <br />\n            </p>\n            <small>\n              We do not take any responsibility for any losses, tickets are non-refundable.\n            </small>\n          </header>\n        </div>\n        {this.show_fotter()}\n        </div>\n      );\n    } else {\n      return (\n        <div className=\"App\">\n          <header className=\"App-header\">\n            {this.show_owner()}\n            {this.state.raffles ? this.show_raffles() : <p>Loading<img src={\"https://media2.giphy.com/media/3oEjI6SIIHBdRxXI40/giphy.gif?cid=790b7611bd9b916ae2ce9fdb242416c7b6f0bc2355d31404&rid=giphy.gif&ct=g\"} className=\"App-logo\" alt=\"logo\" width={\"50px\"} height={\"50px\"} /></p>}\n          </header>\n        </div>\n      );\n    }\n  }\n\n  render() {\n    return (\n      <div>\n        <nav style={{\n            fontSize: \"0.9em\",\n          }} className=\"navbar navbar-dark fixed-top bg-dark flex-md-nowrap p-0 shadow\">\n          <a\n            className=\"navbar-brand col-sm-3 col-md-2 mr-0\"\n            href=\"\"\n              target=\"_blank\"\n            rel=\"noopener noreferrer\"\n          >\n            <img src='https://rxcgames.com/static/media/logo.c4003442.svg' height={'45x'}></img> Welcome to Raffle\n          </a>\n          {this.show_navbar()}\n        </nav>\n        <div className=\"container-fluid mt-5\">\n          <div className=\"row\">\n            <main role=\"main\" className=\"col-lg-12 d-flex text-center\">\n              <div className=\"content mr-auto ml-auto\">\n                {this.show_before_connect()}\n              </div>\n            </main>\n          </div>\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport 'bootstrap/dist/css/bootstrap.css'\nimport App from './components/App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}